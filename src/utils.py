import torch


class ToCudaLoader:
    def __init__(self, loader):
        self.loader = loader
        self.batch_size = loader.batch_size

    def __iter__(self):
        for batch in self.loader:
            if isinstance(batch, (tuple, list)):
                yield [i.cuda(non_blocking=True) for i in batch]
            else:
                yield batch.cuda(non_blocking=True)

    def __len__(self):
        return len(self.loader)


def freeze_batch_norm(model):
    for module in model.modules():
        if isinstance(module, torch.nn.BatchNorm2d):
            if hasattr(module, 'weight'):
                module.weight.requires_grad_(False)
            if hasattr(module, 'bias'):
                module.bias.requires_grad_(False)
            module.eval()

LABEL_MAP = {4: 4,
 1358: 4,
 25: 25,
 2852: 25,
 747: 29,
 29: 29,
 574: 29,
 2814: 36,
 36: 36,
 828: 36,
 2999: 36,
 43: 43,
 2687: 43,
 2505: 44,
 44: 44,
 1110: 51,
 51: 51,
 238: 51,
 67: 67,
 534: 67,
 1218: 69,
 69: 69,
 1192: 75,
 75: 75,
 88: 88,
 402: 88,
 89: 89,
 170: 786,
 1260: 89,
 90: 90,
 2942: 90,
 3053: 95,
 95: 95,
 97: 97,
 657: 97,
 1299: 97,
 700: 700,
 1380: 700,
 1158: 700,
 108: 108,
 561: 108,
 985: 700,
 2972: 700,
 2208: 122,
 122: 122,
 2394: 124,
 124: 124,
 2706: 139,
 139: 139,
 180: 140,
 140: 140,
 2169: 149,
 149: 149,
 2150: 149,
 1953: 164,
 164: 164,
 930: 165,
 165: 165,
 176: 176,
 1180: 176,
 418: 179,
 179: 179,
 1946: 183,
 183: 183,
 145: 145,
 187: 145,
 1568: 87,
 189: 87,
 87: 87,
 415: 87,
 461: 190,
 1189: 190,
 190: 190,
 3023: 190,
 193: 193,
 2398: 193,
 409: 194,
 194: 194,
 202: 202,
 498: 202,
 210: 210,
 2612: 210,
 525: 210,
 1676: 222,
 222: 222,
 228: 228,
 1616: 228,
 1265: 228,
 3026: 228,
 1855: 228,
 483: 245,
 245: 245,
 894: 245,
 2975: 245,
 2779: 308,
 308: 308,
 2333: 325,
 325: 325,
 338: 338,
 628: 338,
 2055: 338,
 1339: 339,
 339: 339,
 2072: 348,
 348: 348,
 352: 352,
 545: 352,
 2979: 363,
 1475: 363,
 363: 363,
 1908: 363,
 1528: 363,
 387: 387,
 2581: 387,
 2242: 391,
 391: 391,
 392: 392,
 1497: 392,
 3033: 429,
 1298: 429,
 429: 429,
 2147: 443,
 841: 443,
 1337: 443,
 443: 443,
 1663: 443,
 1944: 445,
 445: 445,
 452: 452,
 1852: 452,
 1672: 467,
 467: 467,
 474: 474,
 2983: 474,
 674: 484,
 484: 484,
 489: 117,
 117: 117,
 672: 539,
 1226: 539,
 491: 491,
 2900: 539,
 1016: 539,
 539: 539,
 733: 500,
 500: 500,
 2093: 500,
 2738: 501,
 501: 501,
 567: 501,
 504: 504,
 2145: 504,
 516: 516,
 1127: 516,
 756: 527,
 1870: 527,
 527: 527,
 2592: 533,
 533: 533,
 536: 536,
 1513: 536,
 2436: 536,
 562: 562,
 3091: 562,
 569: 569,
 1774: 569,
 2238: 583,
 583: 583,
 2874: 588,
 588: 588,
 636: 589,
 589: 589,
 1438: 589,
 912: 599,
 655: 599,
 599: 599,
 1978: 453,
 626: 453,
 3075: 453,
 453: 453,
 1537: 629,
 629: 629,
 1142: 629,
 2981: 629,
 1030: 631,
 631: 631,
 1994: 397,
 397: 397,
 640: 640,
 1168: 640,
 1328: 642,
 642: 642,
 654: 654,
 2743: 654,
 1128: 414,
 939: 414,
 685: 414,
 658: 414,
 1469: 414,
 414: 414,
 2712: 660,
 1938: 660,
 660: 660,
 2808: 668,
 668: 668,
 313: 313,
 682: 313,
 690: 690,
 2146: 690,
 691: 691,
 1731: 691,
 696: 696,
 964: 696,
 713: 713,
 1001: 713,
 729: 729,
 1349: 729,
 730: 730,
 2943: 730,
 754: 754,
 1551: 754,
 2025: 767,
 767: 767,
 776: 776,
 1105: 776,
 1445: 776,
 2152: 802,
 802: 802,
 1627: 803,
 803: 803,
 1784: 235,
 235: 235,
 804: 235,
 1753: 299,
 299: 299,
 807: 299,
 836: 311,
 311: 311,
 843: 374,
 374: 374,
 1442: 844,
 844: 844,
 856: 856,
 2298: 856,
 2368: 865,
 865: 865,
 1360: 882,
 882: 882,
 2680: 2508,
 2508: 2508,
 913: 913,
 1102: 913,
 1415: 913,
 944: 944,
 1402: 944,
 2384: 948,
 948: 948,
 1884: 950,
 950: 950,
 1691: 975,
 975: 975,
 2497: 980,
 1791: 980,
 980: 980,
 2927: 980,
 2305: 700,
 1002: 1002,
 2213: 1002,
 188: 188,
 1011: 188,
 1148: 188,
 2967: 188,
 2017: 1012,
 1012: 1012,
 2322: 1059,
 1059: 1059,
 441: 441,
 1070: 441,
 1073: 1073,
 1923: 1073,
 1414: 1073,
 1986: 1075,
 1075: 1075,
 2608: 1107,
 1107: 1107,
 1775: 1125,
 1125: 1125,
 1335: 1125,
 296: 296,
 1130: 296,
 1164: 1164,
 1541: 1164,
 1169: 495,
 495: 495,
 1170: 1170,
 1430: 1170,
 2283: 1191,
 1191: 1191,
 1195: 1195,
 2909: 1195,
 2755: 1195,
 1201: 1201,
 2652: 1201,
 1371: 1220,
 1220: 1220,
 1225: 1225,
 2562: 1225,
 1235: 1235,
 2487: 1235,
 419: 419,
 1238: 419,
 1240: 1240,
 2771: 1240,
 763: 763,
 1245: 763,
 1248: 1095,
 1095: 1095,
 1273: 1273,
 2258: 1273,
 1275: 1275,
 2669: 1275,
 2186: 1323,
 1323: 1323,
 1152: 1152,
 1342: 1152,
 1370: 1370,
 2375: 1370,
 1392: 1392,
 2162: 1392,
 1404: 1404,
 3047: 1404,
 1851: 1411,
 1411: 1411,
 3071: 1411,
 1948: 1422,
 1422: 1422,
 1739: 1446,
 1446: 1446,
 1707: 1479,
 1479: 1479,
 2393: 1510,
 1666: 1510,
 1510: 1510,
 2624: 1516,
 1516: 1516,
 2848: 1523,
 1523: 1523,
 427: 427,
 1542: 427,
 1824: 1660,
 1660: 1660,
 1675: 1675,
 3061: 1675,
 1682: 1678,
 1678: 1678,
 1688: 1321,
 1321: 1321,
 2601: 1699,
 1699: 1699,
 2494: 1699,
 1771: 1771,
 2038: 1771,
 1776: 1081,
 1081: 1081,
 2185: 1780,
 1780: 1780,
 1785: 1595,
 1595: 1595,
 2068: 1595,
 1789: 486,
 486: 486,
 1793: 1793,
 2566: 1793,
 1712: 1712,
 1806: 1712,
 1597: 1597,
 1814: 1597,
 2167: 1597,
 1832: 73,
 73: 73,
 35: 35,
 1836: 35,
 2621: 1846,
 1846: 1846,
 2985: 1918,
 1918: 1918,
 42: 42,
 1974: 42,
 1919: 42,
 1936: 1936,
 1960: 1936,
 1937: 499,
 499: 499,
 1341: 499,
 1745: 1745,
 2021: 1745,
 200: 200,
 2031: 200,
 2032: 1395,
 1395: 1395,
 2091: 2091,
 2997: 2091,
 1992: 1992,
 2102: 1992,
 2115: 2115,
 2277: 2115,
 2098: 2098,
 2164: 2098,
 307: 307,
 2172: 307,
 2195: 2195,
 2685: 2195,
 2672: 2113,
 2113: 2113,
 2860: 1695,
 1695: 1695,
 1697: 1697,
 2714: 1697,
 1009: 1009,
 1658: 1009,
 2244: 1534,
 1534: 1534,
 1077: 1077,
 1767: 1077,
 74: 74,
 1635: 74,
 2139: 381,
 381: 381,
 2812: 942,
 942: 942,
 1082: 770,
 770: 770,
 1205: 770,
 2170: 822,
 822: 822,
 1390: 30,
 30: 30,
 968: 968,
 1807: 968}
